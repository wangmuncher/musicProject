/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mp3project;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author atabe
 */
public class PlayerScreen extends javax.swing.JFrame {
    
    Utility audioPlayer;
    String state;
    String likeState;
    String username;
    String curSongName;
    String curArtistName;
    String curGenreName;
    String curSongPath;
    int curSong;
    int curuserid;
    Boolean favorites;
    Boolean userState;
    DbService db = new DbService();
    

    /**
     * Creates new form PlayerScreen
     * @param username
     * @throws java.lang.Exception
     */
    public PlayerScreen(String username) throws Exception {
        audioPlayer = new Utility();
        initComponents();
        state = "Base";
        likeState = "Normal";
        likeStateLabel.setText("Normal");
        likeButton.setEnabled(false);
        db.getInfo(songTable);
        favorites = false;
        userState = false;
        playerLabel.setText("Global Player");
        curSong = -1;
        curuserid = -1;
        this.username = username;
    }
    
    public PlayerScreen(String username,Boolean user){
        this.username = username;
        audioPlayer = new Utility();
        initComponents();
        state = "Base";
        likeState = "Normal";
        likeStateLabel.setText("Normal");
        likeButton.setEnabled(false);
        db.getInfo(songTable, username);
        favorites = false;
        userState = true;
        playerLabel.setText(username + "'s Player");
        curSong = -1;
        curuserid = db.getUserId(username);
    }
    
    public PlayerScreen(String username,int fav){
        this.username = username;
        audioPlayer = new Utility();
        initComponents();
        state = "Base";
        likeState = "Liked";
        likeButton.setVisible(false);
        likeStateLabel.setVisible(false);
        db.getInfoFavorites(songTable, username);
        favorites = true;
        userState = true;
        playerLabel.setText(username + "'s Favorites");
        curSong = -1;
        curuserid = db.getUserId(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        startButton = new javax.swing.JLabel();
        stopButton = new javax.swing.JLabel();
        pauseButton = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        songLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        songTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        likeStateLabel = new javax.swing.JLabel();
        likeButton = new javax.swing.JLabel();
        deleteSongButton = new javax.swing.JButton();
        userScreenButton = new javax.swing.JButton();
        playerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(880, 500));

        jPanel1.setBackground(new java.awt.Color(52, 52, 86));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(52, 52, 86));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        startButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3project/play-button.png"))); // NOI18N
        startButton.setText("jLabel2");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startButtonMouseClicked(evt);
            }
        });
        jPanel2.add(startButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 80));

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3project/stop-button.png"))); // NOI18N
        stopButton.setText("jLabel2");
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopButtonMouseClicked(evt);
            }
        });
        jPanel2.add(stopButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 64, 64));

        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3project/pause-button.png"))); // NOI18N
        pauseButton.setText("jLabel2");
        pauseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseButtonMouseClicked(evt);
            }
        });
        jPanel2.add(pauseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 64, 64));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 260, 100));

        jPanel3.setBackground(new java.awt.Color(0, 102, 255));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(43, 69, 96), 3, true));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        songLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        songLabel.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.add(songLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 210, 40));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 270, 80));

        songTable.setBackground(new java.awt.Color(52, 52, 86));
        songTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 102), 3, true));
        songTable.setForeground(new java.awt.Color(255, 255, 255));
        songTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Song Name", "Artist", "Genre", "Path"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        songTable.setGridColor(new java.awt.Color(102, 102, 255));
        songTable.setSelectionForeground(new java.awt.Color(52, 52, 86));
        songTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(songTable);
        if (songTable.getColumnModel().getColumnCount() > 0) {
            songTable.getColumnModel().getColumn(0).setResizable(false);
            songTable.getColumnModel().getColumn(1).setResizable(false);
            songTable.getColumnModel().getColumn(2).setResizable(false);
            songTable.getColumnModel().getColumn(3).setResizable(false);
            songTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 740, 140));

        jPanel4.setBackground(new java.awt.Color(52, 52, 86));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        likeStateLabel.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.add(likeStateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 50, 30));

        likeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3project/like_icon.png"))); // NOI18N
        likeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                likeButtonMouseClicked(evt);
            }
        });
        jPanel4.add(likeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, -1, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 260, 130, 90));

        deleteSongButton.setText("Delete Current Song");
        deleteSongButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSongButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteSongButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 400, -1, -1));

        userScreenButton.setText("User Screen");
        userScreenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userScreenButtonActionPerformed(evt);
            }
        });
        jPanel1.add(userScreenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, -1, -1));

        playerLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        playerLabel.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(playerLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 300, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 859, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseClicked
        if (state.equals("Paused")) {
            pauseButton.setEnabled(true);
            startButton.setEnabled(false);
            try {
                audioPlayer.resume();
            } catch (Exception ex) {
                Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            state = "Playing";
        }
    }//GEN-LAST:event_startButtonMouseClicked

    private void pauseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseButtonMouseClicked
                pauseButton.setEnabled(false);
                if (state.equals("Playing")) {
                    startButton.setEnabled(true);
                    audioPlayer.pause();
                    state = "Paused";
                } else if (state.equals("Base")) {
                    pauseButton.setEnabled(true);
                }
    }//GEN-LAST:event_pauseButtonMouseClicked

    private void stopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseClicked
                stopButton.setEnabled(true);
                pauseButton.setEnabled(true);
                startButton.setEnabled(true);
                if(state.equals("Playing")){
                    audioPlayer.pause();
                    try {
                        audioPlayer.stop();
                    } catch (Exception ex) {
                        Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if(state.equals("Paused")){
                    try {
                        audioPlayer.stop();
                    } catch (Exception ex) {
                        Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                state = "Base";
    }//GEN-LAST:event_stopButtonMouseClicked

    private void likeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_likeButtonMouseClicked
        if(likeState.equals("Normal")){
            db.addSongToFavorites(curSongName,curArtistName,curGenreName,curSongPath,username);
            likeButton.setEnabled(true);
            likeStateLabel.setText("Liked");
            likeState = "Liked";
        }else if(likeState.equals("Liked")){
            db.deleteAllSongsFromUserFavorites(curSongName,curArtistName, username);
            likeButton.setEnabled(false);
            likeStateLabel.setText("Normal");
            likeState = "Normal";
        }
    }//GEN-LAST:event_likeButtonMouseClicked

    private void songTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songTableMouseClicked
       if(state.equals("Playing")){
        try {
            audioPlayer.stop();
        } catch (Exception ex) {
            Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
        int row = songTable.getSelectedRow();
        int songid = (int) songTable.getValueAt(row, 0);
        String songName = (String) songTable.getValueAt(row, 1);
        String artistName = (String) songTable.getValueAt(row, 2);
        String genreName = (String) songTable.getValueAt(row, 3);
        String songPath = (String) songTable.getValueAt(row, 4);
        
        if(userState && favorites)
        {
            audioPlayer.setFilePath(db.getFavoritesPath(songid,username));
        try {
            audioPlayer.setStruct();
        } catch (Exception ex) {
            Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        state = "Playing";
        startButton.setEnabled(false);
        pauseButton.setEnabled(true);
        songLabel.setText(songName + " - " + artistName);
        }else if (userState && !favorites)
        {
            audioPlayer.setFilePath(db.getPathUser(songid,username));
        try {
            audioPlayer.setStruct();
        } catch (Exception ex) {
            Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        state = "Playing";
        startButton.setEnabled(false);
        pauseButton.setEnabled(true);
        songLabel.setText(songName + " - " + artistName);
        }else 
        {
            audioPlayer.setFilePath(db.getPath(songid));
        try {
            audioPlayer.setStruct();
        } catch (Exception ex) {
            Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        state = "Playing";
        startButton.setEnabled(false);
        pauseButton.setEnabled(true);
        songLabel.setText(songName + " - " + artistName);
        }

        curSongName = songName;
        curArtistName = artistName;
        curGenreName = genreName;
        curSongPath = songPath;
        curSong = songid;
        
        if(db.checkSongFavorites(songName, artistName, username) && !favorites)
        {
            likeButton.setEnabled(true);
            likeStateLabel.setText("Liked");
            likeState = "Liked";
        } else if(!db.checkSongFavorites(songName, artistName, username)  && !favorites){
            likeButton.setEnabled(false);
            likeStateLabel.setText("Normal");
            likeState = "Normal";
        } else if(!favorites){
            likeButton.setEnabled(false);
            likeStateLabel.setText("Normal");
            likeState = "Normal";
        }
    }//GEN-LAST:event_songTableMouseClicked

    private void deleteSongButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSongButtonActionPerformed
        if(state.equals("Playing")){
            try {
                audioPlayer.stop();
            } catch (Exception ex) {
                Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        if(userState && curSong != -1 && favorites){
        db.deleteSongFromUserFavorites(curSong, username);
        PlayerScreen playerscreen;
        try 
        {
            playerscreen = new PlayerScreen(username,1);
            playerscreen.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(UserScreen.class.getName()).log(Level.SEVERE, null, ex);
        } 
        }else if(userState && curSong != -1 && !favorites)
        {
            db.deleteSongFromUser(curSong, username);
        PlayerScreen playerscreen;
        try 
        {
            playerscreen = new PlayerScreen(username,true);
            playerscreen.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(UserScreen.class.getName()).log(Level.SEVERE, null, ex);
        }    
        }else 
        {
        db.deleteSong(curSong);
        PlayerScreen playerscreen;
        try 
        {
            playerscreen = new PlayerScreen(username);
            playerscreen.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(UserScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_deleteSongButtonActionPerformed
 }
    private void userScreenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userScreenButtonActionPerformed
            UserScreen userScreen = new UserScreen(username);
            userScreen.setVisible(true);
            this.dispose();
            if(state.equals("Playing"))
            {
            try {
            audioPlayer.stop();
            }catch (Exception ex) {
            Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_userScreenButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PlayerScreen("Cemal",true).setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(PlayerScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteSongButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel likeButton;
    private javax.swing.JLabel likeStateLabel;
    private javax.swing.JLabel pauseButton;
    private javax.swing.JLabel playerLabel;
    private javax.swing.JLabel songLabel;
    private javax.swing.JTable songTable;
    private javax.swing.JLabel startButton;
    private javax.swing.JLabel stopButton;
    private javax.swing.JButton userScreenButton;
    // End of variables declaration//GEN-END:variables
}
